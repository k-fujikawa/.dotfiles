# 環境変数
export PATH=~/bin:$PATH
export EDITOR='vim'
export TERM="screen-256color"
export LANG=ja_JP.UTF-8
export PATH=~/local/bin:$PATH
export PATH=bin:$PATH
export LESSCHARSET=utf-8
export PYTHONPATH=.:$PYTHONPATH
export UID
export GID

## lsの色設定 ##
export LSCOLORS=gxfxxxxxcxxxxxxxxxgxgx
export LS_COLORS='di=01;36:ln=01;35:ex=01;32'
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=32'

REPORTTIME=1

###############################################################################
###############################################################################

## Emacsキーバインドに変更
bindkey -e

## 補完 ##
autoload -U compinit
compinit
setopt auto_menu
setopt nonomatch
# 補完候補をカーソルで選択できる
zstyle ':completion:*:default' menu select=1

# cd したら自動的にpushdする
setopt auto_pushd
setopt auto_cd

# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# グローバルエイリアス
alias g='git'
alias -g L='| less'
alias -g G='| grep'
# alias -g ls="ls -G"
alias -g ll="ls -l"
alias -g vi="vim"

eval "$(direnv hook zsh)"
if [ "$(uname)" = "Darwin" ]; then
    alias notify="noti-osx -t \"$USER@`hostname`\" -m \"'$*' command finished as $?\" $@"
else
    alias notify="noti-linux -p -t \"$USER@`hostname`\" -m \"'$*' command finished as $?\" $@"
fi


# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
setopt hist_ignore_all_dups
# ヒストリファイルに保存するとき、すでに重複したコマンドがあったら古い方を削除する
setopt hist_save_nodups

# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# フローコントロールを無効にする
setopt no_flow_control

# '#' 以降をコメントとして扱う
setopt interactive_comments

############################
## プロンプトに関する設定 ##
############################

############################

colors=(
    ## 気に入らない色はコメントアウト
    $'%{\e[0;31m%}' # red
    $'%{\e[0;32m%}' # green
    $'%{\e[0;33m%}' # brown
    $'%{\e[0;35m%}' # purple
    $'%{\e[0;36m%}' # cyan

    ## light colors
    # $'%{\e[1;31m%}' # red
    # $'%{\e[1;32m%}' # green
    # $'%{\e[1;33m%}' # brown
    # $'%{\e[1;34m%}' # blue
    # $'%{\e[1;35m%}' # purple
    # $'%{\e[1;36m%}' # cyan
)
colored_user=$colors[$((`echo "$USER" | sum | cut -f1 -d' '`%${#colors}))+1]$USER
colored_host=$colors[$((`echo "$HOST" | sum | cut -f1 -d' '`%${#colors}))+1]
############################

# git branchの表示
# VCSの情報を取得するzshの便利関数 vcs_infoを使う
autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '[%b]'
zstyle ':vcs_info:*' actionformats '[%b|%a]'

precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

RPROMPT='[%F{green}%~%f]'

function ws() {
    tmux a -t ws || tmux new -s ws
}

case ${UID} in
0)
	#  rootの場合
    PROMPT="%F{red}%B%n%b%f@${colored_host}%m%u%f(%D{%m/%d %H:%M}) %1(v|%F{cyan}%1v%f|) : "
    ;;
*)
	#  一般ユーザの場合
    PROMPT="%F{magenta}%B%n%b%f@%F{blue}%m%u%f(%D{%m/%d %H:%M}) %1(v|%F{cyan}%1v%f|) : "
    if [ -n "${REMOTEHOST}${SSH_CONNECTION}" ]; then
        PROMPT="%F{magenta}%B%n%b%f@${colored_host}%m%u%f(%D{%m/%d %H:%M}) %1(v|%F{cyan}%1v%f|) : "
    fi
esac

#  manコマンドのカラーリング
export MANPAGER='less -R'
export PAGER='less'
man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[1;31m") \
		LESS_TERMCAP_md=$(printf "\e[1;31m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[1;32m") \
		man "$@"
}

case "${OSTYPE}" in
darwin*)
  alias ls="ls -G"
  alias ll="ls -lG"
  alias la="ls -laG"
  ;;
linux*)
  alias ls='ls --color'
  alias ll='ls -l --color'
  alias la='ls -la --color'
  ;;
esac

# settings for peco
function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(history -n 1 | \
        eval $tac | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}

zle -N peco-select-history
bindkey '^r' peco-select-history

setopt share_history

# setting for ssg-agent
SOCK="/tmp/ssh-agent-$USER"
if test $SSH_AUTH_SOCK && [ $SSH_AUTH_SOCK != $SOCK ]
then
    rm -f $SOCK
    ln -sf $SSH_AUTH_SOCK $SOCK
    export SSH_AUTH_SOCK=$SOCK
fi
